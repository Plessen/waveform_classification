% Define the function to read CSV files into tables
function df = get_dataframe(location_folder, model_name, version)
    csv_path = fullfile(location_folder, model_name, version, 'metrics.csv');
    df = readtable(csv_path);
end

% Define the function to plot overall test accuracy
function plot_overall_test_accuracy(df_list, number_waveforms, SNR, label_list)
    figure;
    hold on;
    markers = {'o', 's', 'd', '^', 'v', '<', '>', 'p', '*', 'h', 'H', '+'};
    linestyles = {'-', '--', '-.', ':', '-', '--', '-.', ':', '-', '--', '-.', ':'};
    for i = 1:length(df_list)
        df = df_list{i};
        test_acc = df.test_acc_step;
        test_acc = test_acc(~isnan(test_acc));
        test_overall_acc = mean(reshape(test_acc, number_waveforms, []), 1);
        plot(SNR, test_overall_acc, 'DisplayName', label_list{i}, ...
            'LineWidth', 2, 'Marker', markers{i}, 'LineStyle', linestyles{i});
    end
    legend;
    index = -14 <= SNR & SNR <= -12;
    axes('Position', [0.3 0.3 0.25 0.25]);
    box on;
    hold on;
    for i = 1:length(df_list)
        df = df_list{i};
        test_acc = df.test_acc_step;
        test_acc = test_acc(~isnan(test_acc));
        test_overall_acc = mean(reshape(test_acc, number_waveforms, []), 1);
        plot(SNR(index), test_overall_acc(index), 'DisplayName', label_list{i}, ...
            'LineWidth', 2, 'Marker', markers{i}, 'LineStyle', linestyles{i});
    end
    ylim([0.885 0.905]);
    hold off;
end

% Define the function to plot accuracy for each waveform
function plot_all_acc(df_list, number_waveforms, SNR, waveform_list, label_list)
    markers = {'o', 's', 'd', '^', 'v', '<', '>', 'p', '*', 'h', 'H', '+'};
    linestyles = {'-', '--', '-.', ':', '-', '--', '-.', ':', '-', '--', '-.', ':'};
    
    for i = 1:number_waveforms

        need_subplot = false;

        if mod(i-1, 4) == 0
            figure;
        end
        subplot(2, 2, mod(i-1, 4) + 1);
        hold on;
        for j = 1:length(df_list)
            df = df_list{j};
            test_acc = df.test_acc_step;
            test_acc = test_acc(~isnan(test_acc));
            test_acc_waveform = test_acc(i:number_waveforms:end);

            if(sum(test_acc_waveform <= 0.8) > 0)
                need_subplot = true;
            end

            plot(SNR, test_acc_waveform, 'DisplayName', label_list{j}, ...
                'LineWidth', 2, 'Marker', markers{j}, 'LineStyle', linestyles{j});
        end
        title(waveform_list{i});
        legend;
        need_subplot
        if need_subplot
           index = -14 <= SNR & SNR <= -12;
            axes('Position', [0.15 0.15 0.1 0.1]);
            box on;
            hold on;
            for i = 1:length(df_list)
                df = df_list{j};
                test_acc = df.test_acc_step;
                test_acc = test_acc(~isnan(test_acc));
                test_acc_waveform = test_acc(i:number_waveforms:end);

                plot(SNR(index), test_acc_waveform(index), 'DisplayName', label_list{j}, ...
                    'LineWidth', 2, 'Marker', markers{j}, 'LineStyle', linestyles{j});
            end
            ylim([0.7 0.8]);
        end
        
        hold off;
    end
end

% Main script
df = get_dataframe('logs_cluster', 'realcnn-attention-nearest-SST-sigma-0.04-all-waveforms', 'version_0');
df1 = get_dataframe('logs_cluster', 'realcnn-attention-nearest-SST-sigma-0.05-all-waveforms', 'version_0');
df2 = get_dataframe('logs_cluster', 'realcnn-attention-nearest-SST-sigma-0.06-all-waveforms', 'version_0');
%df3 = get_dataframe('logs_cluster', 'realcnn-attention-bilinear-SST-sigma-0.05-all-waveforms', 'version_0');
%df4 = get_dataframe('logs_cluster', 'realcnn-attention-bicubic-SST-sigma-0.05-all-waveforms', 'version_0');
%df5 = get_dataframe('logs_cluster', 'realcnn-attention-lanczos2-SST-sigma-0.05-all-waveforms', 'version_0');
%df6 = get_dataframe('logs_cluster', 'realcnn-attention-lanczos3-SST-sigma-0.05-all-waveforms', 'version_0');

df_list = {df, df1, df2}; %df3, df4, df5, df6};
number_waveforms = 12;
SNR = -14:2:-4;
waveform_list = {'LFM', 'Costas', 'Barker', 'Frank', 'P1', 'P2', 'P3', 'P4', 'T1', 'T2', 'T3', 'T4'};
label_list = {'Sigma - 0.04', 'Sigma - 0.05', 'Sigma - 0.06', 'Bilinear', 'Bicubic', 'Lanczos2', 'Lanczos3'};

plot_overall_test_accuracy(df_list, number_waveforms, SNR, label_list);
plot_all_acc(df_list, number_waveforms, SNR, waveform_list, label_list);

df7 = get_dataframe('logs_cluster', 'realcnn-attention-nearest-SST', 'version_1');
df8 = get_dataframe('logs_cluster', 'realcnn-attention-bilinear-SST', 'version_1');
df9 = get_dataframe('logs_cluster', 'realcnn-attention-bicubic-SST', 'version_1');
df10 = get_dataframe('logs_cluster', 'realcnn-attention-lanczos2-SST', 'version_1');
df11 = get_dataframe('logs_cluster', 'realcnn-attention-lanczos3-SST', 'version_1');

df_list = {df7, df8, df9, df10, df11};
number_waveforms = 8;
SNR = -14:2:-4;
waveform_list = {'LFM', 'Costas', 'Barker', 'Frank', 'P1', 'P2', 'P3', 'P4'};
label_list = {'nearest', 'bilinear', 'bicubic', 'lanczos2', 'lanczos3'};

%plot_overall_test_accuracy(df_list, number_waveforms, SNR, label_list);
%plot_all_acc(df_list, number_waveforms, SNR, waveform_list, label_list);